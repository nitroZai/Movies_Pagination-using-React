{"ast":null,"code":"var _jsxFileName = \"/home/ramchand/Desktop/ReactJs/third/third/src/components/counters.jsx\";\nimport React, { Component } from 'react';\nimport Starter from './starter';\nimport Counter from './counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counters extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = counterId => {\n      console.log(\" Increment \", counterId);\n      const counters = [...this.state.counters];\n      counters.forEach(element => {\n        if (counterId === element.id) {\n          counters[counterId - 1].value += 1;\n          console.log(\"Increment Done\", counters);\n        }\n      });\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleDecrement = counterId => {\n      console.log(\" Decrement \", counterId);\n      const counters = [...this.state.counters];\n      counters.forEach(element => {\n        if (element.id === counterId) {\n          counters[element.id - 1].value -= 1;\n          console.log(\"Decrement done\");\n        }\n      });\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleReset = counterId => {\n      console.log(\"Reset Initiated\", counterId);\n      const counters = this.state.counters.map(c => {\n        if (c.id === counterId) {\n          console.log(\"Found the reset ID\", c.value);\n        } // this.state.counters.forEach(element => {\n        //     if ( element.id === c.id ){\n        //         console.log(\"The reset id is found\", element.id)\n        //     }\n        // });\n        // for (let i = 0; i < this.state.counters.length; i++){\n        //     if ( c.id === this.counters[i].id){\n        //         console.log(\"The reset is found\")\n        //     }\n        // }\n\n      }); // this.setState({\n      //     counters\n      // })\n    };\n\n    this.handleDelete = counterId => {\n      console.log(\"Delete called\", counterId);\n      const counters = this.state.counters.filter(c => c.id != counterId);\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  render() {\n    if (this.state.counters.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"There are nothing here, \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Dumb Fucker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.counters.map(counter => /*#__PURE__*/_jsxDEV(Counter, {\n        value: counter.value,\n        id: counter.id,\n        onDelete: this.handleDelete,\n        onReset: this.handleReset,\n        onIncrement: this.handleIncrement,\n        onDecrement: this.handleDecrement,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"ID: \", counter.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, counter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"names":["React","Component","Starter","Counter","Counters","state","counters","id","value","handleIncrement","counterId","console","log","forEach","element","setState","handleDecrement","handleReset","map","c","handleDelete","filter","render","length","counter"],"sources":["/home/ramchand/Desktop/ReactJs/third/third/src/components/counters.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport Starter from './starter';\nimport Counter from './counter';\n\nclass Counters extends Component {\n    state = { \n\n        counters: [\n            {id: 1, value: 0},\n            {id: 2, value: 0},\n            {id: 3, value: 0},\n            {id: 4, value: 0},\n        ]\n\n     } \n\n     handleIncrement = (counterId) => {\n        console.log(\" Increment \", counterId)\n\n        const counters = [...this.state.counters]\n        \n        counters.forEach(element => {\n            \n            if (counterId === element.id){\n                counters[counterId-1].value += 1;\n                console.log(\"Increment Done\", counters)\n            }\n\n        });\n\n        this.setState(\n            {\n                counters\n            }\n        )\n\n     }\n\n     handleDecrement = (counterId) => {\n        console.log(\" Decrement \", counterId)\n\n        const counters = [ ...this.state.counters ]\n\n        counters.forEach(element => {\n\n            if( element.id === counterId ){\n                counters[element.id - 1].value -= 1\n                console.log(\"Decrement done\")\n            }\n\n        })\n\n        this.setState({\n            counters\n        })\n\n\n     }\n\n     handleReset = (counterId) => {\n        console.log(\"Reset Initiated\", counterId)\n\n        const counters = this.state.counters.map(\n            c => {\n                \n                if(c.id === counterId){\n                    console.log(\"Found the reset ID\", c.value)\n                }\n\n                // this.state.counters.forEach(element => {\n                    \n                //     if ( element.id === c.id ){\n                //         console.log(\"The reset id is found\", element.id)\n                //     }\n\n                // });\n                \n                // for (let i = 0; i < this.state.counters.length; i++){\n\n                //     if ( c.id === this.counters[i].id){\n                //         console.log(\"The reset is found\")\n                //     }\n\n                // }\n            }\n        )\n\n\n        // this.setState({\n        //     counters\n        // })\n\n\n     }\n\n     handleDelete = (counterId) => {\n        console.log(\"Delete called\", counterId)\n        const counters = this.state.counters.filter(\n            c => c.id != counterId\n        )\n        this.setState(\n            {\n                counters\n            }\n        )\n     } \n\n    render() { \n\n        if (this.state.counters.length === 0) {\n\n            return (\n                <h3>There are nothing here, <b>Dumb Fucker</b></h3>\n            )\n\n        }\n\n        return (\n            <div>\n                {/* <Counter></Counter>\n                <Counter></Counter>\n                <Counter></Counter>\n                <Counter></Counter> */}\n\n                {this.state.counters.map(\n                    counter => \n                    <Counter \n                    key={counter.id}\n                    value={counter.value}\n                    id = {counter.id}\n                    onDelete={this.handleDelete}\n                    onReset={this.handleReset}\n                    onIncrement={this.handleIncrement}\n                    onDecrement={this.handleDecrement}\n                    >\n            \n                    <h4>ID: {counter.id}</h4>\n\n                    </Counter>\n                )}\n\n            </div>\n        );\n    }\n}\n \nexport default Counters;"],"mappings":"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"},"metadata":{},"sourceType":"module"}